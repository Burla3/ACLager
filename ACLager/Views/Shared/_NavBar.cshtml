@model ACLager.ViewModels.BaseViewModel

@{
    var controllerName = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();
    string[] cnames = { "ItemType", "User", "Inventory", "Location" };
}
<div class="navbar navbar-default">
    <div class="container-fluid">
        @if (Model.UserIsAdmin && cnames.Contains(controllerName)) {
            <div class="fixed-button-container">
                <div class="btn btn-success btn-fab btn-flowout clickable" data-href="@Url.Action("Create")">
                    <i class="material-icons normal">add circle</i>
                </div>
            </div>
        }
        <ul class="nav navbar-nav navbar-left">
            <li class="hidden-xs"><a href="/"><h5 class="text-uppercase"><strong><i class="material-icons va-tb">home</i> Forside</strong></h5></a></li>
            <li class="visible-xs-inline-block pull-left"><a href="/"><h5 class="text-uppercase"><strong><i class="material-icons va-tb">home</i> Forside</strong></h5></a></li>
            <li class="visible-xs-inline-block pull-right"><a href="@Url.Action("Logout", "Login")"><h5 class="text-uppercase"><strong>Log ud<i class="material-icons va-tb">exit_to_app</i></strong></h5></a></li>
        </ul>
        <div class="navbar-filler visible-xs-inline-block"></div>
        <a href="/" class="navbar-brand"><h3><strong>ACLager @if (!string.IsNullOrEmpty(Model.SectionName)) {
            @:- @Model.SectionName
        }</strong></h3></a>
        <ul class="nav navbar-nav navbar-right hidden-xs">
            <li><a href="@Url.Action("Logout", "Login")"><h5 class="text-uppercase"><strong>Log ud<i class="material-icons va-tb">exit_to_app</i></strong></h5></a></li>
        </ul>
    </div>
</div>
