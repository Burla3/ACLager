@using ACLager.Models
@model ACLager.ViewModels.WasteViewModel

@{
    ViewBag.Title = "Oversigt over spild";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container" id="wasteSort">
    @Html.Partial("_SearchPanel")
</div>

@using (Html.BeginForm("WasteReport")){
    @Html.AntiForgeryToken()

<div class="panel container">
        @using (Html.BeginForm("CreateWasteReport", "Waste"))
        {
            @Html.AntiForgeryToken()
                <fieldset>
                    <Legend>Opret spildrapport</Legend>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.WasteReport.Amount, "Mængde", new { @class = "control-label" })
                                @Html.EditorFor(model => model.WasteReport.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WasteReport.Amount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.WasteReport.Item.UID, "Varetype", new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.WasteReport.Item.UID, Model.Itemname, new { @class = "form-control chosen-select" })
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div>
                                @Html.LabelFor(model => model.WasteReport.Description, "Beskrivelse", new { @class = "control-label" })
                                @Html.TextAreaFor(model => model.WasteReport.Description, new { @class = "form-control", rows = 6 })
                            </div>
                        </div>
                </fieldset>

                <div>
                <input class="btn btn-raised btn-success pull-right" type="submit" value="Opret">
                <input class="btn btn-default pull-right flowout-close" type="reset" value="Annuller">
        </div>
       }
</div>


<script type="text/javascript">
        var GLOBALID = 0;
        function certainID(elem) {
            var el = $(elem);
            if (!el.attr("id")) {
                el.attr("id", "artificialID_" + GLOBALID);
                GLOBALID += 1;
            }
            return el.attr("id");
        }

        function getDimensions(elem) {
            var row = $("#TableRow01");
            var offset = row.offset();
            //console.log({"width":row.width(), "height":row.height(), "top": offset.top, "left": offset.left, "position": "absolute"});
            return {
                "z-index": 10,
                "border-radius": "3px",
                "width": row.width(),
                "height": row.height() * 2,
                "top": offset.top,
                "left": offset.left,
                "position": "absolute"
            };
        }

        $(document).ready(function () {

            var options = {
                valueNames: ['sort-date']
            };

            var userList = new List('wasteSort', options);

            $('body').on('click', '.btn-page-flowout-up', function () {
                var content_element = "";

                if ($(this).data('content-element')) {
                    content_element = $($(this).data('content-element'));
                } else {
                    console.error("No flowoutcontentelementselector specified. <- Nice long word eh? :)");
                }

                var options = {
                    trigger_element: $(this),
                    content_element: content_element,
                    direction: 'up'
                }

                $('#FlowoutBackdrop').trigger('flowout:page:show', options);

            })

            //catch clcik event and modify to prevent closing when using the inner content.
            $('body').on('click', '.flowout-noclose', function (event) {
                event['flowout-noclose'] = true;
                return event;
            })

            $('body').on('click', '.flowout-close', function (event) {
                if (!event['flowout-noclose']) {
                    $('#FlowoutBackdrop').trigger('flowout:page:hide');
                }
            })

            $('#FlowoutBackdrop').on('flowout:page:hide', function (event) {
                var backdrop = $(this);
                var options = backdrop.data('options');
                //flow the content down into hiding
                options.content_element.transition({
                    'top': backdrop.height() + 50
                }, 300, function () {
                    //hide the element
                    options.content_element.css('display', 'none');

                    //show the trigger button
                    options.trigger_element.show();

                    //remove the backdrop
                    backdrop.removeClass('active');

                    //reactivate scrolling
                    $('body').removeClass('no-scroll');

                });

            })

            $('#FlowoutBackdrop').on('flowout:page:show', function (event, options) {
                var backdrop = $(this);
                backdrop.addClass('active');

                //make sure the user can not scroll anymore
                $('body').addClass('no-scroll');

                //save the options object for later use when closing
                backdrop.data('options', options);

                //hide the button
                options.trigger_element.hide();

                //show the content
                options.content_element.css({
                    'position': 'fixed',
                    'top': backdrop.height(),
                    'display': 'block',
                    'z-index': backdrop.css('z-index') + 1
                });
                options.content_element.transition({
                    'top': (backdrop.height() - options.content_element.height()) / 2
                }, 300);
            })

            $('#ExpansionPanelsContainer').on('click', '.expansion-control', function (event) {
                var that = $(this);
                var exp_content = $(that.data("expandtarget"));
                var expand_height = that.data('expandmaxheight');
                that.find('i.material-icons').toggleClass('hidden');
                exp_content.transition({ "max-height": expand_height }, 300, function () {

                    if (expand_height === "100px") {
                        that.data('expandmaxheight', '0px')
                    } else if (expand_height === '0px') {
                        that.data('expandmaxheight', '100px');
                    }

                });
            })
        });
</script>
